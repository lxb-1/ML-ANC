WARNING:absl:No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
/home/liang/miniconda3/lib/python3.9/site-packages/torch/utils/data/dataloader.py:563: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 4, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
Total of - 13729 - Trainable Parameters
Epoch Loop:   0%|                                                                                              | 0/200 [00:00<?, ?it/s]
































































































































































































































































































































































































































































































































Epoch Loss:-8.88418:   0%|▎                                                                       | 1/200 [28:32<94:40:17, 1712.65s/it]




















































































































































































































































































































































































































































































































































































Batch Loss:-10.84986:  10%|███████▌                                                                   | 52/512 [02:46<24:13,  3.16s/it]
Process Process-60:6:  10%|███████▌                                                                   | 52/512 [02:46<24:13,  3.16s/it]
Process Process-53:
Process Process-58:
Process Process-52:
Process Process-57:
Process Process-51:
Process Process-50:
Process Process-49:
Process Process-56:
Process Process-47:
Process Process-55:
Process Process-46:
Process Process-48:
Exception ignored in: <function _MultiProcessingDataLoaderIter.__del__ at 0x7fe4631c0940>
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1510, in __del__
    self._shutdown_workers()
  File "/home/liang/miniconda3/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1474, in _shutdown_workers
    w.join(timeout=_utils.MP_STATUS_CHECK_INTERVAL)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/popen_fork.py", line 40, in wait
    if not wait([self.sentinel], timeout):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/connection.py", line 936, in wait
    ready = selector.select(timeout)
  File "/home/liang/miniconda3/lib/python3.9/selectors.py", line 416, in select
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
KeyboardInterrupt
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 318, in _bootstrap
    util._exit_function()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 360, in _exit_function
    _run_finalizers()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 300, in _run_finalizers
    finalizer()
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/util.py", line 224, in __call__
    res = self._callback(*self._args, **self._kwargs)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/queues.py", line 199, in _finalize_join
    thread.join()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1060, in join
    self._wait_for_tstate_lock()
  File "/home/liang/miniconda3/lib/python3.9/threading.py", line 1080, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt:
Epoch Loss:-9.83343:   1%|▋                                                                       | 2/200 [58:42<96:52:17, 1761.30s/it]
Exception ignored in: <function _MultiProcessingDataLoaderIter.__del__ at 0x7fe4631c0940>
Traceback (most recent call last):
  File "/home/liang/miniconda3/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1510, in __del__
    self._shutdown_workers()
  File "/home/liang/miniconda3/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1474, in _shutdown_workers
    w.join(timeout=_utils.MP_STATUS_CHECK_INTERVAL)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/popen_fork.py", line 40, in wait
    if not wait([self.sentinel], timeout):
  File "/home/liang/miniconda3/lib/python3.9/multiprocessing/connection.py", line 936, in wait
    ready = selector.select(timeout)
  File "/home/liang/miniconda3/lib/python3.9/selectors.py", line 416, in select
    fd_event_list = self._selector.poll(timeout)
  File "/home/liang/miniconda3/lib/python3.9/site-packages/torch/utils/data/_utils/signal_handling.py", line 66, in handler
    _error_if_any_worker_fails()
RuntimeError: DataLoader worker (pid 26680) exited unexpectedly with exit code 1. Details are lost due to multiprocessing. Rerunning with num_workers=0 may give better error trace.